apply plugin: 'com.android.application'
//apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.daemonize.daemondevapp"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'io.github.controlwear:virtualjoystick:1.8.0'
    //    implementation project(':daemonengine')
    //    implementation project(':androidconsumer')
    annotationProcessor project(':daemonprocessor')
}


task engineTask(type: Copy) {
    from '../daemonengine/build/libs/daemonengine.jar'
    into 'libs/'
}

task processorTask(type: Copy) {
    from '../daemonprocessor/build/libs/daemonprocessor.jar'
    into 'libs/'
}

task consumerTask(type: Copy) {
    from zipTree('../androidconsumer/build/outputs/aar/androidconsumer-release.aar')
    include('classes.jar')
    rename('classes.jar', 'androidconsumer.jar')
    into 'libs/'
}

task gameTask(type: Copy) {
    from '../game/build/libs/game.jar'
    into 'libs/'
}

engineTask.dependsOn(':daemonengine:build')
engineTask.dependsOn(':daemonprocessor:build')

consumerTask.dependsOn(':daemonengine:build')
consumerTask.dependsOn(':daemonprocessor:build')

processorTask.dependsOn(':daemonengine:build')
processorTask.dependsOn(':daemonprocessor:build')

gameTask.dependsOn(':daemonengine:build')
gameTask.dependsOn(':daemonprocessor:build')
gameTask.dependsOn(engineTask)
gameTask.dependsOn(processorTask)
gameTask.dependsOn(':game:build')

//preBuild.dependsOn(engineTask)
//preBuild.dependsOn(consumerTask)
//preBuild.dependsOn(processorTask)
preBuild.dependsOn(gameTask)





